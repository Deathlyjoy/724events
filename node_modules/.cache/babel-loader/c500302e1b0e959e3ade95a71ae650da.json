{"ast":null,"code":"var _jsxFileName = \"/Users/quentin/Documents/DOQ/cursus/web/formation openclassrooms/Inte\\u0301grateur Web/P10/724events/src/components/EventCard/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getMonth } from \"../../helpers/Date\";\nimport { useData } from \"../../contexts/DataContext\";\nimport \"./style.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EventCard = _ref => {\n  _s();\n\n  let {\n    imageSrc,\n    imageAlt,\n    date = new Date(),\n    title,\n    label,\n    small = false,\n    ...props\n  } = _ref;\n  const {\n    data\n  } = useData();\n  const filteredEvents = (data === null || data === void 0 ? void 0 : data.events) || [];\n  filteredEvents.sort((evtA, bevtAevtA) => new Date(b.date) - new Date(a.date)); // Sélection du dernier événement en date\n\n  const lastEvent = filteredEvents.length > 0 ? filteredEvents[0] : {};\n  const defaultImageSrc = (lastEvent === null || lastEvent === void 0 ? void 0 : lastEvent.cover) || \"\";\n  const defaultImageAlt = (lastEvent === null || lastEvent === void 0 ? void 0 : lastEvent.description) || \"\";\n  const defaultTitle = (lastEvent === null || lastEvent === void 0 ? void 0 : lastEvent.title) || \"\";\n  const defaultType = (lastEvent === null || lastEvent === void 0 ? void 0 : lastEvent.type) || \"\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"card-testid\",\n    className: `EventCard${small ? \" EventCard--small\" : \"\"}`,\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"EventCard__imageContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        \"data-testid\": \"card-image-testid\",\n        src: imageSrc || defaultImageSrc,\n        alt: imageAlt || defaultImageAlt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"EventCard__label\",\n        children: label || defaultType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"EventCard__descriptionContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"EventCard__title\",\n        children: title || defaultTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"EventCard__month\",\n        children: getMonth(date)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EventCard, \"48GbdIYpj5SXn0fqwnlSFa/Jh0k=\", false, function () {\n  return [useData];\n});\n\n_c = EventCard;\nEventCard.propTypes = {\n  imageSrc: PropTypes.string,\n  imageAlt: PropTypes.string,\n  date: PropTypes.instanceOf(Date),\n  title: PropTypes.string,\n  small: PropTypes.bool,\n  label: PropTypes.string\n};\nexport default EventCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventCard\");","map":{"version":3,"sources":["/Users/quentin/Documents/DOQ/cursus/web/formation openclassrooms/Intégrateur Web/P10/724events/src/components/EventCard/index.js"],"names":["React","PropTypes","getMonth","useData","EventCard","imageSrc","imageAlt","date","Date","title","label","small","props","data","filteredEvents","events","sort","evtA","bevtAevtA","b","a","lastEvent","length","defaultImageSrc","cover","defaultImageAlt","description","defaultTitle","defaultType","type","propTypes","string","instanceOf","bool"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getMonth } from \"../../helpers/Date\";\nimport { useData } from \"../../contexts/DataContext\";\nimport \"./style.scss\";\n\nconst EventCard = ({\n  imageSrc,\n  imageAlt,\n  date = new Date(),\n  title,\n  label,\n  small = false,\n  ...props\n}) => {\n  const { data } = useData();\n\n  const filteredEvents = data?.events || [];\n  filteredEvents.sort((evtA, bevtAevtA) => new Date(b.date) - new Date(a.date));\n\n  // Sélection du dernier événement en date\n  const lastEvent = filteredEvents.length > 0 ? filteredEvents[0] : {};\n\n  const defaultImageSrc = lastEvent?.cover || \"\";\n  const defaultImageAlt = lastEvent?.description || \"\";\n  const defaultTitle = lastEvent?.title || \"\";\n  const defaultType = lastEvent?.type || \"\";\n\n  return (\n    <div\n      data-testid=\"card-testid\"\n      className={`EventCard${small ? \" EventCard--small\" : \"\"}`}\n      {...props}\n    >\n      <div className=\"EventCard__imageContainer\">\n        <img\n          data-testid=\"card-image-testid\"\n          src={imageSrc || defaultImageSrc}\n          alt={imageAlt || defaultImageAlt}\n        />\n        <div className=\"EventCard__label\">{label || defaultType}</div>\n      </div>\n      <div className=\"EventCard__descriptionContainer\">\n        <div className=\"EventCard__title\">{title || defaultTitle}</div>\n        <div className=\"EventCard__month\">{getMonth(date)}</div>\n      </div>\n    </div>\n  );\n};\n\nEventCard.propTypes = {\n  imageSrc: PropTypes.string,\n  imageAlt: PropTypes.string,\n  date: PropTypes.instanceOf(Date),\n  title: PropTypes.string,\n  small: PropTypes.bool,\n  label: PropTypes.string,\n};\n\nexport default EventCard;\n"]},"metadata":{},"sourceType":"module"}